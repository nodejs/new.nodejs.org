name: Pull Request Checks

on:
  pull_request_target:
    branches:
      - main
  workflow_dispatch:

defaults:
  run:
    working-directory: ./

permissions:
  contents: read
  actions: read
  # This permission is required by `MishaKav/jest-coverage-comment`
  pull-requests: write

env:
  # This is explicitly used on the `npx turbo` commands
  TURBO_REF_FILTER: ${{ github.event_name == 'pull_request' && github.event.pull_request.base.sha || github.event.before }}
  # This is the amount of commits we should fetch
  GIT_FETCH_DEPTH: ${{ github.event.pull_request.commits }} + 1

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: Git Checkout
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9
        with:
          # Get enough fetch-depth so that `turbo --filter` works correctly
          fetch-depth: ${{ env.GIT_FETCH_DEPTH }}
          # Since we use `pull_request_target` we want to checkout the current ref
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Restore Cache
        uses: actions/cache/restore@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8
        with:
          path: |
            ~/.npm
            .next/cache
            node_modules/.cache
          key: cache-${{ hashFiles('package-lock.json') }}-
          restore-keys: |
            cache-${{ hashFiles('package-lock.json') }}-
            cache-

      - name: Set up Node.js
        uses: actions/setup-node@e33196f7422957bea03ed53f6fbb155025ffc7b8
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install NPM packages
        run: npm ci --no-audit --no-fund

      - name: Run Linting
        run: npx turbo lint --filter="...[$TURBO_REF_FILTER]" --team="${{ secrets.TURBO_TEAM }}" --token="${{ secrets.TURBO_TEAM }}"

      - name: Run Prettier
        run: npx turbo prettier --filter="...[$TURBO_REF_FILTER]" --team="${{ secrets.TURBO_TEAM }}" --token="${{ secrets.TURBO_TEAM }}"

  tests:
    name: Tests
    runs-on: ubuntu-latest

    steps:
      - name: Use GNU tar instead BSD tar
        if: matrix.os == 'windows-latest'
        shell: cmd
        run: echo C:\Program Files\Git\usr\bin>>"%GITHUB_PATH%"

      - name: Git Checkout
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9
        with:
          # Get enough fetch-depth so that `turbo --filter` works correctly
          fetch-depth: ${{ env.GIT_FETCH_DEPTH }}
          # Since we use `pull_request_target` we want to checkout the current ref
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Restore Cache
        uses: actions/cache/restore@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8
        with:
          path: |
            ~/.npm
            .next/cache
            node_modules/.cache
          key: cache-${{ hashFiles('package-lock.json') }}-
          restore-keys: |
            cache-${{ hashFiles('package-lock.json') }}-
            cache-

      - name: Set up Node.js
        uses: actions/setup-node@e33196f7422957bea03ed53f6fbb155025ffc7b8
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install NPM packages
        run: npm ci --no-audit --no-fund

      - name: Run Unit Tests
        run: npx turbo test:unit --filter="...[$TURBO_REF_FILTER]" --team="${{ secrets.TURBO_TEAM }}" --token="${{ secrets.TURBO_TEAM }}" -- --ci --coverage

      - name: Jest Coverage Comment
        uses: MishaKav/jest-coverage-comment@41b5ca01d1250de84537448d248b8d18152cb277
        with:
          title: 'Unit Test Coverage Report'
          junitxml-path: ./junit.xml
          junitxml-title: Unit Test Report

      - name: Capture Deployment URL
        id: vercel_storybook_preview_url
        uses: zentered/vercel-preview-url@e5fb141da2e3d62692b38e6c7c17477aad214165
        with:
          vercel_project_id: ${{ secrets.TURBO_PROJECT_ID }}
          vercel_team_id: ${{ secrets.TURBO_TEAM }}
        env:
          VERCEL_TOKEN: ${{ secrets.TURBO_TOKEN }}

      - name: Run Storybook Tests
        run: npx turbo test:storybook --filter="...[$TURBO_REF_FILTER]" --team="${{ secrets.TURBO_TEAM }}" --token="${{ secrets.TURBO_TEAM }}" -- --ci
        env:
          TARGET_URL: 'https://${{ steps.vercel_storybook_preview_url.outputs.preview_url }}'
