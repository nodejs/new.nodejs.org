# Security Notes
# Only selected Actions are allowed within this repository. Please refer to (https://github.com/nodejs/nodejs.org/settings/actions)
# for the full list of available actions. If you want to add a new one, please reach out a maintainer with Admin permissions.
# REVIEWERS, please always double-check security practices before merging a PR that contains Workflow changes!!
# AUTHORS, please only use actions with explicit SHA references, and avoid using `@master` or `@main` references or `@version` tags.

name: Pull Request Checks

on:
  pull_request:

defaults:
  run:
    # This ensures that the working directory is the root of the repository
    working-directory: ./

permissions:
  contents: read
  actions: read
  # This permission is required by `MishaKav/jest-coverage-comment`
  pull-requests: write

jobs:
  base:
    name: Base Tasks
    runs-on: ubuntu-latest

    steps:
      - name: Calculate Commits to Checkout
        id: calculate_current_commits
        # This calculates the amount of commits we should fetch during our shallow clone
        # This calculates the amount of commits this PR produced diverged from the base branch + 1
        # Which should include the "merge" commit reference
        # In other words, the GitHub Action will always have the full history of the current PR
        # We need all the commits of the PR so that `turbo --filter` works correctly
        run: echo "fetch_depth=$(( ${{ github.event.pull_request.commits }} + 1 ))" >> "$GITHUB_OUTPUT"

      - name: Provide Turborepo Arguments
        id: turborepo_arguments
        # `--filter` flag allows us to tell TurboRepo to only run a said command if there were any changes found in a given --filter range
        # It verifies if any change was done to any of the including `glob` patterns described for a said command on `turbo.json`
        # By default in this Workflow we use the `...[$TURBO_REF_FILTER]` as a value to the filter flag which tells Turborepo to look changes
        # between the latest base branch commit and all the commits of this PR; That's why we use the `pull_request.base.sha` as a ref to the last
        # commit on the base branch that this pull_request refers to.
        # We also set the Turborepo Cache to the `.turbo` folder
        # See https://turbo.build/repo/docs/reference/command-line-reference/run#--filter
        run: echo "turbo_args=\"--filter=\\\"...[${{ github.event.pull_request.base.sha }}]\\\" --cache-dir=\\\".turbo\\\"\"" >> "$GITHUB_OUTPUT"

  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: base

    steps:
      - name: Git Checkout (`base_ref`)
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9
        with:
          # We only need to fetch the last commit from the base_ref
          # for installing our dependencies in safe mode and other safe operations
          fetch-depth: 1
          # This ensures we're checkint out the base_ref and not the pull request codebase
          ref: ${{ github.event.pull_request.base.ref }}

      - name: Restore Cache
        uses: actions/cache/restore@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8
        with:
          path: |
            .turbo
            .next/cache
            node_modules/.cache
          # We want to restore cache from local .npm caches, .next/cache and node_modules/.cache
          # As this should reduce build times, and the overall time for installing packages or running operations
          key: cache-${{ hashFiles('package-lock.json') }}-
          restore-keys: |
            cache-${{ hashFiles('package-lock.json') }}-
            cache-

      - name: Set up Node.js
        uses: actions/setup-node@e33196f7422957bea03ed53f6fbb155025ffc7b8
        with:
          # We want to ensure that the Node.js version running here respects our supported versions
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install NPM packages (`base_ref`)
        # We want to avoid NPM from running the Audit Step and Funding messages on a CI environment
        # We also use `npm i` instead of `npm ci` so that the node_modules/.cache folder doesn't get deleted
        run: npm i --no-audit --no-fund

      - name: Git Checkout (`head_sha`)
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9
        with:
          # Here we apply the Environment Variable created above on the "Calculate Commits to Checkout"
          fetch-depth: ${{ jobs.base.steps.calculate_current_commits.outputs.fetch_depth }}
          # Since we use the `pull_request_target` event we want to checkout the current ref as by default this
          # command will checkout `main` instead of the current pull_request ref
          # We checkout the head.sha to get the latest commit, instead of head.ref that gives the current ref of the branch
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Install NPM packages (`base_ref`)
        # We want to ignore-scripts from code checked out from the user as it might be dangerous
        run: npm i --no-audit --no-fund --ignore-scripts --userconfig=/dev/null

      - name: Ensure Turborepo is installed
        # This removes any attempt of local hijack of the Turbo binary and forces an install of Turborepo on
        # the current NPM scope without being added to `package.json`
        run: |
          rm -rf node_modules/bin/turbo
          npm i --no-audit --no-fund --no-save turbo@latest

      - name: Run `turbo lint`
        # We want to enforce that the actual `turbo@latest` package is used instead of a possible hijack from the user
        # the `${{ jobs.base.steps.turborepo_arguments.outputs.turbo_args }}` is a string substitution happening from the base job
        run: npm exec --package=turbo@latest -- turbo lint ${{ jobs.base.steps.turborepo_arguments.outputs.turbo_args }}

      - name: Run `turbo prettier`
        # We want to enforce that the actual `turbo@latest` package is used instead of a possible hijack from the user
        # the `${{ jobs.base.steps.turborepo_arguments.outputs.turbo_args }}` is a string substitution happening from the base job
        run: npm exec --package=turbo@latest -- turbo prettier ${{ jobs.base.steps.turborepo_arguments.outputs.turbo_args }}

  tests:
    name: Tests
    runs-on: ubuntu-latest
    needs: base

    steps:
      - name: Git Checkout (`base_ref`)
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9
        with:
          # We only need to fetch the last commit from the base_ref
          # for installing our dependencies in safe mode and other safe operations
          fetch-depth: 1
          # This ensures we're checkint out the base_ref and not the pull request codebase
          ref: ${{ github.event.pull_request.base.ref }}

      - name: Restore Cache
        uses: actions/cache/restore@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8
        with:
          path: |
            .turbo
            .next/cache
            node_modules/.cache
          # We want to restore cache from local .npm caches, .next/cache and node_modules/.cache
          # As this should reduce build times, and the overall time for installing packages or running operations
          key: cache-${{ hashFiles('package-lock.json') }}-
          restore-keys: |
            cache-${{ hashFiles('package-lock.json') }}-
            cache-

      - name: Set up Node.js
        uses: actions/setup-node@e33196f7422957bea03ed53f6fbb155025ffc7b8
        with:
          # We want to ensure that the Node.js version running here respects our supported versions
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install NPM packages (`base_ref`)
        # We want to avoid NPM from running the Audit Step and Funding messages on a CI environment
        # We also use `npm i` instead of `npm ci` so that the node_modules/.cache folder doesn't get deleted
        run: npm i --no-audit --no-fund

      - name: Git Checkout (`head_sha`)
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9
        with:
          # Here we apply the Environment Variable created above on the "Calculate Commits to Checkout"
          fetch-depth: ${{ jobs.base.steps.calculate_current_commits.outputs.fetch_depth }}
          # Since we use the `pull_request_target` event we want to checkout the current ref as by default this
          # command will checkout `main` instead of the current pull_request ref
          # We checkout the head.sha to get the latest commit, instead of head.ref that gives the current ref of the branch
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Install NPM packages (`base_ref`)
        # We want to ignore-scripts from code checked out from the user as it might be dangerous
        run: npm i --no-audit --no-fund --ignore-scripts --userconfig=/dev/null

      - name: Run Unit Tests
        # We want to enforce that the actual `turbo@latest` package is used instead of a possible hijack from the user
        # the `${{ jobs.base.steps.turborepo_arguments.outputs.turbo_args }}` is a string substitution happening from the base job
        run: npm exec --package=turbo@latest -- turbo test:unit ${{ jobs.base.steps.turborepo_arguments.outputs.turbo_args }} -- --ci --coverage

      - name: Jest Coverage Comment
        # This comments the current Jest Coverage Report containing JUnit XML reports
        # and a Code Coverage Summary
        uses: MishaKav/jest-coverage-comment@41b5ca01d1250de84537448d248b8d18152cb277
        with:
          title: 'Unit Test Coverage Report'
          junitxml-path: ./junit.xml
          junitxml-title: Unit Test Report

      - name: Run Storybook Tests
        # We want to enforce that the actual `turbo@latest` package is used instead of a possible hijack from the user
        # the `${{ jobs.base.steps.turborepo_arguments.outputs.turbo_args }}` is a string substitution happening from the base job
        run: npm exec --package=turbo@latest -- turbo test:storybook:local ${{ jobs.base.steps.turborepo_arguments.outputs.turbo_args }} -- --ci
