name: CI

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

env:
  FORCE_COLOR: 2

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: npm

      - name: Install npm dependencies
        run: npm ci

      - name: Lint
        run: |
          echo "::add-matcher::.github/workflows/remark-lint-problem-matcher.json"
          npm run lint

  build:
    name: Node on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: npm

      - name: Install NPM dependencies
        run: npm ci

      - name: Restore Next.js cache
        uses: actions/cache/restore@v3
        with:
          path: |
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: Build Next.js
        run: npm run build
        env:
          NODE_OPTIONS: '--max_old_space_size=4096'

      - name: Save Next.js cache
        uses: actions/cache/save@v3
        with:
          path: |
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('.next/cache/eslint') }}

      - name: Export Next.js
        run: npm run export

      # We don't generate non-translated pages. So if a certain page on /en/ exists
      # but not on /de/ or any other language, it will 404. This is handled on nginx level
      # Prior to this migration Metalsmith would copy the English version of a page to all
      # the non-translated pages. "Fooling" the 404 by basically adding i18n context with
      # an untranslated page. This would be very exhaustive with Next.js on SCG mode
      # but it's something we want to do once we decide upon using Next.js on SSR mode or
      # if we decide upon using Vercel's infrastructure as generating a copy of every English page
      # on the file system is very resource exhaustive.
      # - name: Run linkinator
      #   uses: JustinBeckwith/linkinator-action@v1
      #   with:
      #     linksToSkip: '^(?!http://localhost)'
      #     paths: en
      #     recurse: true
      #     serverRoot: build
      #     verbosity: error
